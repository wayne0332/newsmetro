<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <!--======================================= 资源文件================================================== -->
    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
            p:location="classpath:config.properties" p:fileEncoding="utf-8" />
    <!--======================================= 扫描包================================================== -->
    <context:component-scan base-package="com.newsmetro.dao" />
    <context:component-scan base-package="com.newsmetro.service" />
    <context:component-scan base-package="com.newsmetro.po" />

    <!--======================================= 数据源 ================================================== -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbcDriver}">
        </property>
        <property name="url" value="${url}">
        </property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
    </bean>
    <!--<bean id="sessionFactory"-->
          <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
        <!--<property name="dataSource">-->
            <!--<ref bean="dataSource" />-->
        <!--</property>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">-->
                    <!--org.hibernate.dialect.MySQLDialect-->
                <!--</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!--<property name="packagesToScan">-->
            <!--<list>-->
                <!--<value>com.newsmetro</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="annotatedClasses">-->
            <!--<list>-->
                <!--<value>com.newsmetro.po.TargetPoint</value>-->
                <!--<value>com.newsmetro.po.XpathMaping</value>-->
                <!--<value>com.newsmetro.po.User</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--======================================= 事务管理================================================== -->
    <aop:aspectj-autoproxy expose-proxy="true" />
    <tx:annotation-driven transaction-manager="txManager"/>
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut"
                      expression="execution(* com.newsmetro.service..*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
    </aop:config>
    <!--======================================= 定时任务================================================== -->
    <bean autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">    <!-- triggers是Spring定时器的特殊属性 -->
            <list>
                <ref local="testTrigger" />
            </list>
        </property>
    </bean>

    <bean id="testTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail"><!-- jobDetail是Spring定时器的特殊属性 -->
            <ref bean="activateCardJobDetail" />
        </property>
        <property name="cronExpression">
            <!-- <value>0 0 * * * *</value> --><!-- cronExpression是Spring定时器的特殊属性 -->
            <value>0 0 * * * ?</value>
        </property>
    </bean>

    <bean id="activateCardJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">   <!-- targetObject是Spring定时器的特殊属性 -->
            <ref bean="clearNewUserJob" /> <!-- 这个就是具体实现类，如果是注解，则必须为component指定value -->
        </property>
        <property name="targetMethod">    <!-- targetMethod是Spring定时器的特殊属性 -->
            <value>execute</value><!--  就是java类中的任务方法 -->
        </property>
    </bean>
    <bean id="clearNewUserJob" class="com.newsmetro.jobs.ClearNewUserJob" />

    <!--======================================= mapper================================================== -->
    <bean id="parentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <bean id="userMapper" parent="parentMapper">
        <property name="mapperInterface" value="com.newsmetro.dao.UserMapper"></property>
    </bean>
    <bean id="targetPointMapper" parent="parentMapper">
        <property name="mapperInterface" value="com.newsmetro.dao.TargetPointMapper"></property>
    </bean>
</beans>